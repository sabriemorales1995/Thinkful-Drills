https://repl.it/@smorales1995/most-frequent-word-analyzer-challenge



function getTokens(rawString) {
  // NB: `.filter(Boolean)` removes any falsy items from an array
  return rawString.toLowerCase().split(/[ ,!.";:-]+/).filter(Boolean).sort();
}//removes non-alpha characters, lowercase, alphabetizes the words.

function mostFrequentWord(text) {//text is a body of text==one long string
  let words = getTokens(text);// filtered version of text.
  let wordFrequencies = {};//empty Object
  for (let i = 0; i <= words.length; i++) {//will cycle until the end of words
    if (words[i] in wordFrequencies) {//checks to see if a key with the same word has already been set atthe location of [i]
      wordFrequencies[words[i]]++;//if exists, will increment by 1
    } else {//if no key exists, will set new key of the word[i], with 1 already counted
      wordFrequencies[words[i]] = 1;
    }
  }
  let currentMaxKey = Object.keys(wordFrequencies)[0];//currentMaxKey is temporarily set to the first key of wordFrequencies
  let currentMaxCount = wordFrequencies[currentMaxKey];//set to the value of key in wordFrequencies

  for (let word in wordFrequencies) {//compares word to each key of wordFrequencies
    if (wordFrequencies[word] > currentMaxCount) {//compares values if higher
      currentMaxKey = word;//replaces word to key with larger number
      currentMaxCount = wordFrequencies[word];//replacedwith value of new key in wordFrequencies
    }
  }
  return currentMaxKey;
}
